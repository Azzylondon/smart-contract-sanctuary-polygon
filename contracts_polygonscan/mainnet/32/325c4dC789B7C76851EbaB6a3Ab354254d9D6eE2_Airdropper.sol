/**
 *Submitted for verification at polygonscan.com on 2021-08-07
*/

/*

NFT Sprites (https://nftsprites.com), launched in March 2021, is by the same developer as Ether Rock which sold nearly $1 million worth of rocks in a few hours. Ether Sprites are AI-generated people turned into NFT's (Non-Fungible Tokens), which you can buy and sell on the Ethereum blockchain. None of the people in this game are real -- they are 100% generated by state-of-the-art AI. By buying one of the NFT's here, you are the sole owner of the NFT until the end of time (as will be shown on the blockchain) unless you sell it or gift it to another person.

The NFT Sprites smart contract is a fully compliant ERC721 NFT contract that allows for a maximum of only 100 NFT's to be minted. The first NFT costs 0.005 Ether, and each NFT gets a little more expensive. Once you buy an NFT you can either list it for sale at any price or gift it to someone else.

This is a contract to airdrop NFT Sprite tokens, which might be used in future to reward NFT Sprites owners.

*/ 

pragma solidity ^0.8.0;

interface IERC20 {
    function totalSupply() external view returns (uint256);
    function balanceOf(address account) external view returns (uint256);
    function transfer(address recipient, uint256 amount) external returns (bool);
    function allowance(address owner, address spender) external view returns (uint256);
    function approve(address spender, uint256 amount) external returns (bool);
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);
}

contract Airdropper {

    address tokenAddress = 0xA9316E1909eDF3eD33B0Dd1c6631c50B82c6e142;

    function transfer (address[] calldata _addresses) external {
        require(msg.sender == 0xaADd4adFAf324300bBAfF7fcCC51E96BBfcCa620);
        for (uint i = 0; i < _addresses.length; i += 1) {
            require(_addresses[i] != address(0), "Address invalid");
            IERC20(tokenAddress).transfer(_addresses[i], 10**18);
        }
    }
    
    function changeTokenAddress (address _newAddress) external {
        require(msg.sender == 0xaADd4adFAf324300bBAfF7fcCC51E96BBfcCa620);
        tokenAddress = _newAddress;
    }
    
}