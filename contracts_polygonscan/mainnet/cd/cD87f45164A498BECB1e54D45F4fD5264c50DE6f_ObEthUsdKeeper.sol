/**
 *Submitted for verification at polygonscan.com on 2021-12-23
*/

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7;

// KeeperCompatible.sol imports the functions from both ./KeeperBase.sol and
// ./interfaces/KeeperCompatibleInterface.sol
interface KeeperCompatibleInterface {
    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);
    function performUpkeep(bytes calldata performData) external;
}

interface IObEthUsdSimple {

    function currentGameId() external view returns (uint);
    function Games(uint) external view returns (uint256, uint256, uint256, uint256, uint256, bool, uint256, int256);
    function NextCurrentGame() external;

}

contract ObEthUsdKeeper is KeeperCompatibleInterface {
    /**
    * Public counter variable
    */
    uint public counter;

    uint public lastTimeStamp;

    IObEthUsdSimple public predictionMarket;

    constructor() {
      lastTimeStamp = block.timestamp;

      counter = 0;
      predictionMarket = IObEthUsdSimple(0xCa2d0B66cb00C9FFB7C35602c65EbefD06e291cB);
    }

    function checkUpkeep(bytes calldata /* checkData */) external override view returns (bool upkeepNeeded, bytes memory /* performData */) {
        (, , , , , ,uint endTimestamp,) = predictionMarket.Games(predictionMarket.currentGameId());
        upkeepNeeded = endTimestamp <= block.timestamp;
        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.
    }

    function performUpkeep(bytes calldata /* performData */) external override {
        (, , , , , ,uint endTimestamp,) = predictionMarket.Games(predictionMarket.currentGameId());
        if(endTimestamp <= block.timestamp){
            lastTimeStamp = block.timestamp;
            counter = counter + 1;
            predictionMarket.NextCurrentGame();
        }
        // We don't use the performData in this example. The performData is generated by the Keeper's call to your checkUpkeep function
    }
}